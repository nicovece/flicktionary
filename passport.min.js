const passport=require("passport"),LocalStrategy=require("passport-local").Strategy,Models=require("./models.js"),passportJWT=require("passport-jwt");let Users=Models.User,JWTStrategy=passportJWT.Strategy,ExtractJWT=passportJWT.ExtractJwt;passport.use(new LocalStrategy({usernameField:"Username",passwordField:"Password"},(async(username,password,callback)=>{console.log(`${username} ${password}`),await Users.findOne({Username:username}).then((user=>user?user.validatePassword(password)?(console.log("finished"),callback(null,user)):(console.log("incorrect password"),callback(null,!1,{message:"Incorrect password."})):(console.log("incorrect username"),callback(null,!1,{message:"Incorrect username or password."})))).catch((error=>{if(error)return console.log(error),callback(error)}))}))),passport.use(new JWTStrategy({jwtFromRequest:ExtractJWT.fromAuthHeaderAsBearerToken(),secretOrKey:process.env.JWT_SECRET},(async(jwtPayload,callback)=>await Users.findById(jwtPayload._id).then((user=>callback(null,user))).catch((error=>callback(error))))));